<project name="shoppytouch" default="default" basedir=".">
    <available file="build.properties" property="file_prop_exists" type="file" />
    <if>
        <equals arg1="${file_prop_exists}" arg2="true" />
        <then>
            <!-- parse the properties files -->
            <property file="build.properties"/>
        </then>
    </if>
    <target name="default" description="The default target to list targets">
        <exec command="phing -l" outputProperty="phing_targets"/>
        <echo>Please select a target.</echo>
        <echo>${phing_targets}</echo>
    </target>
    <target name="clean" description="Clean up the application">
        <delete>
            <fileset dir="${project.basedir}/config/autoload/local">
                <include name="*.php" />
            </fileset>
        </delete>
        <delete>
            <fileset dir="${project.basedir}/data/cache">
                <include name="*.php" />
            </fileset>
        </delete>
        <delete>
            <fileset dir="${project.basedir}/data/orm/proxies">
                <include name="*.php" />
            </fileset>
        </delete>
    </target>
    <target name="config-db-settings" description="Create a local DB config file">
        <copy file="${project.basedir}/config/autoload/local/doctrine.php.dist" tofile="${project.basedir}/config/autoload/local/doctrine.php" overwrite="true">
            <filterchain>
                <replacetokens begintoken="%%" endtoken="%%">
                    <token key="DB_HOST" value="${db.host}" />
                    <token key="DB_PORT" value="${db.port}" />
                    <token key="DB_CHARSET" value="${db.charset}" />
                    <token key="DB_USER" value="${db.username}" />
                    <token key="DB_PASSWORD" value="${db.password}" />
                    <token key="DB_DATABASE" value="${db.database}" />
                </replacetokens>
            </filterchain>
        </copy>
    </target>
    <target name="config-mail-settings" description="Create a local mail config file">
        <copy file="${project.basedir}/config/autoload/local/mail.php.dist" tofile="${project.basedir}/config/autoload/local/mail.php" overwrite="true">
            <filterchain>
                <replacetokens begintoken="%%" endtoken="%%">
                    <token key="MAIL_NAME" value="${env.MAIL_NAME}" />
                    <token key="MAIL_HOST" value="${env.MAIL_HOST}" />
                    <token key="MAIL_PORT" value="${env.MAIL_PORT}" />
                    <token key="MAIL_CONNECTION" value="${env.MAIL_CONNECTION}" />
                    <token key="MAIL_SSL" value="${env.MAIL_SSL}" />
                    <token key="MAIL_USERNAME" value="${env.MAIL_USERNAME}" />
                    <token key="MAIL_PASSWORD" value="${env.MAIL_PASSWORD}" />
                </replacetokens>
            </filterchain>
        </copy>
    </target>
    <target name="config-cache-settings" description="Create local cache config files">
        <copy file="${project.basedir}/config/autoload/local/cache.php.dist" tofile="${project.basedir}/config/autoload/local/cache.php" overwrite="true">
            <filterchain>
                <replacetokens begintoken="%%" endtoken="%%">
                    <token key="CACHE_HOST" value="${cache.host}" />
                    <token key="CACHE_PORT" value="${cache.port}" />
                </replacetokens>
            </filterchain>
        </copy>
    </target>

    <target name="reset-db" description="Reset the database">
        <pdosqlexec url="mysql:host=${db.host}:${db.port}" userid="${db.username}" password="${db.password}">
            DROP SCHEMA IF EXISTS ${db.database};
            CREATE SCHEMA IF NOT EXISTS ${db.database} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
        </pdosqlexec>
    </target>

    <target name="migrate-db" description="Update schema">
        <exec dir="${project.basedir}" passthru="true" checkreturn="true" command="vendor/bin/doctrine-cli migrations:migrate latest --no-interaction" />
        <exec dir="${project.basedir}" passthru="true" checkreturn="true" command="vendor/bin/doctrine-cli orm:generate-proxies" />
    </target>

    <target name="import-data">
        <echo>Please wait while generating data...</echo>
        <exec dir="${project.basedir}" passthru="true" checkreturn="true" command="vendor/bin/doctrine-cli data-fixture:import" />
    </target>

    <target name="init" depends="config, setup-db" />

    <target name="setup-db" hidden="true" depends="reset-db, migrate-db, import-data" />

    <target name="config" depends="clean, config-cache-settings, config-db-settings" />
</project>
